env.SERVICE_NAME = 'pants'
env.REPO_NAME = 'gcr.io/sr-poc-message-delivery'

pipeline {
    agent any

    stages {
        stage('Build') {
            steps {
                echo "$SERVICE_NAME:$GIT_COMMIT"
                sh 'printenv'
                sh 'docker build -t $REPO_NAME/$SERVICE_NAME:$GIT_COMMIT .'
            }
        }
        stage('Push Image') {
            steps {
                sh 'gcloud docker -- push $REPO_NAME/$SERVICE_NAME:$GIT_COMMIT'
            }
        }
        stage('Copy Artifacts') {
            steps {
                sh 'ls'
                sh 'gsutil cp deployment.yml Dockerfile gs://sr-deployment-artifacts/$SERVICE_NAME/$GIT_COMMIT/'
                sh 'gsutil ls gs://sr-deployment-artifacts/$SERVICE_NAME/$GIT_COMMIT/'
            }
        }
        stage('Deploy to Pants ENV') {
            steps {
                echo 'Deploying to pants'
                sh "sed -i.bak 's/\${build_number}/$GIT_COMMIT/g' deployment.yml"
                sh "sed -i.bak 's/\${image_name}/$SERVICE_NAME/g' deployment.yml"
                sh 'kubectl config use-context pants'
                sh 'kubectl apply --record=true -f deployment.yml'
                sh 'kubectl rollout status deployment $SERVICE_NAME'
            }
        }
        stage('Deploy to Panda ENV') {
            steps {
                timeout(time: 5, unit: 'DAYS') {
                  input 'Are you sure?'
                }
                echo 'Deploying to panda'
                sh 'kubectl config use-context panda'
                sh 'kubectl apply --record=true -f deployment.yml'
                sh 'kubectl rollout status deployment $SERVICE_NAME'
            }
        }
    }
}
