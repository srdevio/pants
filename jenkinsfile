#!groovy

//Use Shared libs
@Library('pipeline-libs@master') _

// This var controls the deployment and service name in k8s
env.SERVICE_NAME = 'pants'
// This is the project the private docker repo resides in in GCE.
env.REPO_NAME = 'gcr.io/sr-poc-message-delivery'

pipeline {
    agent any

    // Build the docker image using the Jenkins agent
    stages {
        stage('Build') {
            steps {
              // From shared libs. Assumes SERVICE_NAME and REPO_NAME exist.
              dockerBuild this
            }
        }
        // These stages handle the artifacts from the docker build etc.
        stage('Artifacts') {
          parallel {
            // Push to private docker repository
            stage('Push Image') {
                steps {
                    dockerPush this
                }
            }
            // Copy deployment file(s) to a private storage bucket
            stage('Copy deployment files') {
                steps {
                    pushArtifactsGcloud this
                }
            }
          }
        }
        // Deploy the new build to the PANTS environment.
        stage('Deploy to Pants ENV') {
            steps {
                deployGen this, 'pants'
            }
        }
        stage('Test') {
            steps {
                sh './tests/test.sh'
            }
        }
        // Manually deploy the build to the PANDA ENV. Will wait X time.
        stage('Deploy to Panda ENV') {
            steps {
                timeout(time: 1, unit: 'DAYS') {
                  input 'Are you sure?'
                }
                echo 'Deploying to panda'
                sh 'kubectl config use-context panda'
                sh 'kubectl apply --record=true -f deployment.yml'
                sh 'kubectl rollout status deployment $SERVICE_NAME'
            }
        }
    }
    post {
        always {
            archive 'tests/*.xml'
            junit 'tests/*.xml'
        }
    }
}
